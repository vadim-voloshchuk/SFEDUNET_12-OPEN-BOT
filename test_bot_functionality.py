#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥."""

import sys
import json
from bot import TelegramBot
from config import BOT_TOKEN

def test_bot_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞."""

    print("=== –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Telegram Bot ===")

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = TelegramBot(BOT_TOKEN)

    test_user_id = 999999  # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_chat_id = 999999

    print(f"1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID: {test_user_id})")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start
    start_update = {
        'update_id': 1,
        'message': {
            'message_id': 1,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': '/start'
        }
    }

    try:
        bot.process_update(start_update)
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start: {e}")
        return False

    print(f"2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–≤–æ–¥ –∏–º–µ–Ω–∏")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    name_update = {
        'update_id': 2,
        'message': {
            'message_id': 2,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        }
    }

    try:
        bot.process_update(name_update)
        print("‚úÖ –í–≤–æ–¥ –∏–º–µ–Ω–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∏–º–µ–Ω–∏: {e}")
        return False

    print(f"3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É '–°—Ç–µ–Ω–¥—ã'")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É "üéÆ –°—Ç–µ–Ω–¥—ã"
    stands_text = {
        'update_id': 3,
        'message': {
            'message_id': 3,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': 'üéÆ –°—Ç–µ–Ω–¥—ã'
        }
    }

    try:
        bot.process_update(stands_text)
        print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ '–°—Ç–µ–Ω–¥—ã' –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã '–°—Ç–µ–Ω–¥—ã': {e}")
        return False

    print(f"4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Å—Ç–µ–Ω–¥–∞ '–ù–µ–π—Ä–æ–ø–ª–µ–π'")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Å—Ç–µ–Ω–¥–∞ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
    stand_text = {
        'update_id': 4,
        'message': {
            'message_id': 4,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': 'üéÆ –ù–µ–π—Ä–æ–ø–ª–µ–π'
        }
    }

    try:
        bot.process_update(stand_text)
        print("‚úÖ –í—ã–±–æ—Ä —Å—Ç–µ–Ω–¥–∞ '–ù–µ–π—Ä–æ–ø–ª–µ–π' –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–µ–Ω–¥–∞: {e}")
        return False

    print(f"5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–µ–Ω–¥–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–µ–Ω–¥–∞ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    complete_text = {
        'update_id': 5,
        'message': {
            'message_id': 5,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': '‚úÖ –ü—Ä–æ–π—Ç–∏ —Å—Ç–µ–Ω–¥'
        }
    }

    try:
        bot.process_update(complete_text)
        print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç–µ–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å—Ç–µ–Ω–¥–∞: {e}")
        return False

    print(f"6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = bot.state_manager.get_user(test_user_id)
        print(f"   –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user['full_name']}")
        print(f"   –°—Ç–∞—Ç—É—Å —Å—Ç–µ–Ω–¥–∞ 'neuroplay': {user['stand_status']['neuroplay']['done']}")

        if user['full_name'] == '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' and user['stand_status']['neuroplay']['done']:
            print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ")
        else:
            print("‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
        return False

    print(f"7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    progress_text = {
        'update_id': 6,
        'message': {
            'message_id': 6,
            'chat': {'id': test_chat_id},
            'from': {'id': test_user_id, 'username': 'test_user'},
            'text': 'üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å'
        }
    }

    try:
        bot.process_update(progress_text)
        print("‚úÖ –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é: {e}")
        return False

    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("‚úÖ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
    print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç–µ–Ω–¥–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")

    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        current_data = bot.state_manager.data
        if str(test_user_id) in current_data:
            del current_data[str(test_user_id)]
            bot.state_manager._save_state()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    return True

if __name__ == '__main__':
    success = test_bot_functionality()
    sys.exit(0 if success else 1)