version: '3.8'

services:
  sfedunet-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sfedunet-telegram-bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY}
      - BOT_STATE_PATH=/app/data/state.json
      - FLASK_ENV=production
    volumes:
      # Persistent data storage
      - ./data:/app/data:rw
      # Logs
      - ./logs:/app/logs:rw
    ports:
      - "5001:5001"  # Admin panel
    networks:
      - bot-network
    labels:
      - "com.docker.compose.project=sfedunet-bot"
      - "description=Sfedunet 12 Telegram Bot"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5001/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.2'

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: sfedunet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - bot-network
    depends_on:
      - sfedunet-bot
    profiles:
      - production

networks:
  bot-network:
    driver: bridge
    name: sfedunet-bot-network

# Persistent volumes
volumes:
  bot-data:
    driver: local
  bot-logs:
    driver: local