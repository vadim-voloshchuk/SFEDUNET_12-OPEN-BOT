#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –µ–¥–∏–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö."""

import time
import random
from realtime_state import get_state_manager

def test_realtime_sync():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏."""

    print("üöÄ –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print("=" * 50)

    # –ü–æ–ª—É—á–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
    state_manager = get_state_manager()

    print(f"üìä –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    stats = state_manager.get_stats()
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
    print(f"   –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {stats['average_progress']}%")

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_id = random.randint(1000000, 9999999)
    print(f"\nüë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {test_user_id}")

    user = state_manager.get_user(test_user_id)
    print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å {len(user['stand_status'])} —Å—Ç–µ–Ω–¥–∞–º–∏")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\nüìù –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    state_manager.update_user(test_user_id, {
        'full_name': f'Test User {test_user_id % 1000}',
        'awaiting_name': False
    })

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Å—Ç–µ–Ω–¥–æ–≤
    stands = list(user['stand_status'].keys())
    for i, stand_id in enumerate(stands[:3]):  # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç–µ–Ω–¥–∞
        print(f"\nüéØ –ü—Ä–æ—Ö–æ–¥–∏–º —Å—Ç–µ–Ω–¥ {i+1}: {stand_id}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç–µ–Ω–¥–∞
        user_data = state_manager.get_user(test_user_id)
        user_data['stand_status'][stand_id]['done'] = True

        state_manager.update_user(test_user_id, {
            'stand_status': user_data['stand_status']
        })

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = state_manager.get_stats()
        print(f"   üìà –ù–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å {stats['average_progress']}%")

        time.sleep(1)  # –ü–∞—É–∑–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏

    # –î–æ–±–∞–≤–ª—è–µ–º VK –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
    print(f"\n‚úÖ –î–æ–±–∞–≤–ª—è–µ–º VK –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    state_manager.update_user(test_user_id, {
        'vk_verified': True,
        'vk_profile': 'https://vk.com/test_user'
    })

    # –ü—Ä–æ—Ö–æ–¥–∏–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç–µ–Ω–¥—ã
    for i, stand_id in enumerate(stands[3:], 4):
        print(f"\nüéØ –ü—Ä–æ—Ö–æ–¥–∏–º —Å—Ç–µ–Ω–¥ {i}: {stand_id}")

        user_data = state_manager.get_user(test_user_id)
        user_data['stand_status'][stand_id]['done'] = True

        state_manager.update_user(test_user_id, {
            'stand_status': user_data['stand_status']
        })

        time.sleep(1)

    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print(f"\nüèÜ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    stats = state_manager.get_stats()
    print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
    print(f"   –ó–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö –≤—Å–µ —Å—Ç–µ–Ω–¥—ã: {stats['completed_users']}")
    print(f"   –ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['qualified_users']}")
    print(f"   VK –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['vk_verified_users']}")
    print(f"   –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {stats['average_progress']}%")

    print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {test_user_id} –ø—Ä–æ—à–µ–ª –≤—Å–µ —Å—Ç–µ–Ω–¥—ã.")
    print(f"üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–∞ http://localhost:5000 - –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")

    return test_user_id

if __name__ == '__main__':
    test_realtime_sync()